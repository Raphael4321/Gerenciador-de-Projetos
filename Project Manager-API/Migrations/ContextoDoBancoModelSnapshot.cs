// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_Manager_API.Conexão;

#nullable disable

namespace Project_Manager_API.Migrations
{
    [DbContext(typeof(ContextoDoBanco))]
    partial class ContextoDoBancoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("Project_Manager_API.Models.MEquipe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjetoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ProjetoID");

                    b.ToTable("Membros");
                });

            modelBuilder.Entity("Project_Manager_API.Models.MEquipe_Tarefa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MembroID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TarefaID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("MembroID");

                    b.HasIndex("TarefaID");

                    b.ToTable("MEquipe_Tarefas");
                });

            modelBuilder.Entity("Project_Manager_API.Models.Projeto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("Project_Manager_API.Models.Tarefa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjetoID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ProjetoID");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("Project_Manager_API.Models.MEquipe", b =>
                {
                    b.HasOne("Project_Manager_API.Models.Projeto", null)
                        .WithMany("Membros")
                        .HasForeignKey("ProjetoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_Manager_API.Models.MEquipe_Tarefa", b =>
                {
                    b.HasOne("Project_Manager_API.Models.MEquipe", "Membro")
                        .WithMany()
                        .HasForeignKey("MembroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_Manager_API.Models.Tarefa", "Tarefa")
                        .WithMany()
                        .HasForeignKey("TarefaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membro");

                    b.Navigation("Tarefa");
                });

            modelBuilder.Entity("Project_Manager_API.Models.Tarefa", b =>
                {
                    b.HasOne("Project_Manager_API.Models.Projeto", null)
                        .WithMany("Tarefas")
                        .HasForeignKey("ProjetoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_Manager_API.Models.Projeto", b =>
                {
                    b.Navigation("Membros");

                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
